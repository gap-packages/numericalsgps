<?xml version="1.0" encoding="UTF-8"?>
<Appendix><Heading>Contributions</Heading>


<Section><Heading>Functions implemented by A. Sammartano</Heading>

A. Sammartano implemented the following functions.

<P/>
<Ref Func="IsAperySetGammaRectangular"/>,

<P/>
<Ref Func="IsAperySetBetaRectangular"/>,

<P/>
<Ref Func="IsAperySetAlphaRectangular"/>,

<P/>
<Ref Func="TypeSequenceOfNumericalSemigroup"/>,

<P/>
<Ref Func="IsGradedAssociatedRingNumericalSemigroupBuchsbaum"/>,

<P/>
<Ref Func="IsGradedAssociatedRingNumericalSemigroupBuchsbaum"/>,

<P/>
<Ref Func="TorsionOfAssociatedGradedRingNumericalSemigroup"/>,

<P/>
<Ref Func="BuchsbaumNumberOfAssociatedGradedRingNumericalSemigroup"/>,

<P/>
<Ref Func="IsMpureNumericalSemigroup"/>,

<P/>
<Ref Func="IsPureNumericalSemigroup"/>,

<P/>
<Ref Func="IsGradedAssociatedRingNumericalSemigroupGorenstein"/>,

<P/>
<Ref Func="IsGradedAssociatedRingNumericalSemigroupCI"/>.


</Section>

<Section><Heading>Functions implemented by C. O'Neill</Heading>

C. O'Neill implemented the following functions described in <Cite Key="B-P-ON"></Cite>:

<P/>
<Ref Func="OmegaPrimalityOfElementListInNumericalSemigroup"/>,

<P/>
<Ref Func="FactorizationsElementListWRTNumericalSemigroup"/>,

<P/>
<Ref Func="DeltaSetPeriodicityBoundForNumericalSemigroup"/>,

<P/>
<Ref Func="DeltaSetPeriodicityStartForNumericalSemigroup"/>,

<P/>
<Ref Func="DeltaSetListUpToElementWRTNumericalSemigroup"/>,

<P/>
<Ref Func="DeltaSetUnionUpToElementWRTNumericalSemigroup"/>,

<P/>
<Ref Func="DeltaSetOfNumericalSemigroup"/>.


</Section>

<Section><Heading>Functions implemented by K. Stokes</Heading>

Klara Stokes helped with the implementation of functions related to patterns for ideals of numerical semigroups <Ref Sect="sec:PatternsIdeals"/>.

</Section>

<Section><Heading>Functions implemented by I. Ojeda and C. J. Moreno Ávila</Heading>

Ignacio and Carlos Jesús implemented the algorithms given in <Cite Key="Roune"></Cite> and <Cite Key="MC-O-T"></Cite> for the calculation of the Frobenius number and Apéry set of a numerical semigroup using Gröbner basis calculations. These methods will be used if 4ti2 is loaded (either 4ti2Interface or 4ti2gap). A faster algorithm is employed provided that singular is loaded.
</Section>


<Section><Heading>Functions implemented by G. Zito</Heading>
  Giuseppe gave the algorithms for the current version functions
<P/>
<Ref Func="ArfNumericalSemigroupsWithFrobeniusNumber"/>,
<P/>
<Ref Func="ArfNumericalSemigroupsWithFrobeniusNumberUpTo"/>,
<P/>
<Ref Func="ArfNumericalSemigroupsWithGenus"/>,
<P/>
<Ref Func="ArfNumericalSemigroupsWithGenusUpTo"/>,
<P/>
<Ref Func="ArfCharactersOfArfNumericalSemigroup"/>.

</Section>


<Section><Heading>Functions implemented by A. Herrera-Poyatos</Heading>
  Andrés Herrera-Poyatos gave new implementations of
  <P/>
    <Ref Func="IsSelfReciprocalUnivariatePolynomial"/> and
  <P/>
    <Ref Func="IsKroneckerPolynomial"/>.
</Section>
</Appendix>
